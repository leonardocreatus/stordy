# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import block_pb2 as block__pb2


class BlockServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddBlock = channel.unary_unary(
                '/stordy.block.BlockService/AddBlock',
                request_serializer=block__pb2.Block.SerializeToString,
                response_deserializer=block__pb2.Empty.FromString,
                )
        self.FindBlock = channel.unary_unary(
                '/stordy.block.BlockService/FindBlock',
                request_serializer=block__pb2.FindBlockRequest.SerializeToString,
                response_deserializer=block__pb2.Block.FromString,
                )
        self.LengthBlock = channel.unary_unary(
                '/stordy.block.BlockService/LengthBlock',
                request_serializer=block__pb2.LengthRequest.SerializeToString,
                response_deserializer=block__pb2.LengthReply.FromString,
                )
        self.GetLastBlock = channel.unary_unary(
                '/stordy.block.BlockService/GetLastBlock',
                request_serializer=block__pb2.Empty.SerializeToString,
                response_deserializer=block__pb2.Block.FromString,
                )
        self.Length = channel.unary_unary(
                '/stordy.block.BlockService/Length',
                request_serializer=block__pb2.Empty.SerializeToString,
                response_deserializer=block__pb2.LengthReply.FromString,
                )
        self.GetFullChain = channel.unary_unary(
                '/stordy.block.BlockService/GetFullChain',
                request_serializer=block__pb2.Empty.SerializeToString,
                response_deserializer=block__pb2.GetFullChainReply.FromString,
                )


class BlockServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LengthBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Length(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFullChain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlockServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBlock,
                    request_deserializer=block__pb2.Block.FromString,
                    response_serializer=block__pb2.Empty.SerializeToString,
            ),
            'FindBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.FindBlock,
                    request_deserializer=block__pb2.FindBlockRequest.FromString,
                    response_serializer=block__pb2.Block.SerializeToString,
            ),
            'LengthBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.LengthBlock,
                    request_deserializer=block__pb2.LengthRequest.FromString,
                    response_serializer=block__pb2.LengthReply.SerializeToString,
            ),
            'GetLastBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastBlock,
                    request_deserializer=block__pb2.Empty.FromString,
                    response_serializer=block__pb2.Block.SerializeToString,
            ),
            'Length': grpc.unary_unary_rpc_method_handler(
                    servicer.Length,
                    request_deserializer=block__pb2.Empty.FromString,
                    response_serializer=block__pb2.LengthReply.SerializeToString,
            ),
            'GetFullChain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFullChain,
                    request_deserializer=block__pb2.Empty.FromString,
                    response_serializer=block__pb2.GetFullChainReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stordy.block.BlockService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BlockService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/AddBlock',
            block__pb2.Block.SerializeToString,
            block__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/FindBlock',
            block__pb2.FindBlockRequest.SerializeToString,
            block__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LengthBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/LengthBlock',
            block__pb2.LengthRequest.SerializeToString,
            block__pb2.LengthReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/GetLastBlock',
            block__pb2.Empty.SerializeToString,
            block__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Length(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/Length',
            block__pb2.Empty.SerializeToString,
            block__pb2.LengthReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFullChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stordy.block.BlockService/GetFullChain',
            block__pb2.Empty.SerializeToString,
            block__pb2.GetFullChainReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
